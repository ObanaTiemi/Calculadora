{"remainingRequest":"C:\\Users\\Thais\\Desktop\\Calculadora\\site_calculadora\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Thais\\Desktop\\Calculadora\\site_calculadora\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Thais\\Desktop\\Calculadora\\site_calculadora\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Thais\\Desktop\\Calculadora\\site_calculadora\\src\\components\\Calcula.vue?vue&type=template&id=5e18bdb5&scoped=true&","dependencies":[{"path":"C:\\Users\\Thais\\Desktop\\Calculadora\\site_calculadora\\src\\components\\Calcula.vue","mtime":1554250634623},{"path":"C:\\Users\\Thais\\Desktop\\Calculadora\\site_calculadora\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Thais\\Desktop\\Calculadora\\site_calculadora\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Thais\\Desktop\\Calculadora\\site_calculadora\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Thais\\Desktop\\Calculadora\\site_calculadora\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"calcular\", attrs: { align: \"left\", id: \"calculaNum\" } },\n    [\n      _c(\"div\", [\n        _vm._v(\"X: \"),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.valorX,\n              expression: \"valorX\"\n            }\n          ],\n          class: this.errox,\n          attrs: { type: \"number\", placeholder: \"Valor de x\" },\n          domProps: { value: _vm.valorX },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.valorX = $event.target.value\n            }\n          }\n        }),\n        _vm._v(\"\\n             Y: \"),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.valorY,\n              expression: \"valorY\"\n            }\n          ],\n          class: this.erroy,\n          attrs: { type: \"number\", placeholder: \"Valor de y\" },\n          domProps: { value: _vm.valorY },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.valorY = $event.target.value\n            }\n          }\n        }),\n        _c(\n          \"button\",\n          {\n            attrs: { id: \"mais\" },\n            on: {\n              click: function($event) {\n                return _vm.calculaMais()\n              }\n            }\n          },\n          [_vm._v(\"x+y\")]\n        ),\n        _c(\n          \"button\",\n          {\n            attrs: { id: \"menos\" },\n            on: {\n              click: function($event) {\n                return _vm.calculaMenos()\n              }\n            }\n          },\n          [_vm._v(\"x-y\")]\n        ),\n        _c(\n          \"button\",\n          {\n            attrs: { id: \"vezes\" },\n            on: {\n              click: function($event) {\n                return _vm.calculaMulti()\n              }\n            }\n          },\n          [_vm._v(\"x*y\")]\n        ),\n        _c(\n          \"button\",\n          {\n            attrs: { id: \"dividido\" },\n            on: {\n              click: function($event) {\n                return _vm.calculaDivisao()\n              }\n            }\n          },\n          [_vm._v(\"x/y\")]\n        )\n      ]),\n      _c(\"div\", [\n        _vm._v(\"\\n            Resultado: \"),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: this.result,\n              expression: \"this.result\"\n            }\n          ],\n          attrs: { type: \"text\" },\n          domProps: { value: this.result },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.$set(this, \"result\", $event.target.value)\n            }\n          }\n        })\n      ])\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}